[gd_resource type="Shader" format=2]

[resource]
code = "shader_type spatial;
render_mode async_visible, blend_mix, depth_draw_opaque, cull_back, diffuse_burley, specular_schlick_ggx;

uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;

uniform float fresnel_exponent = 3.0;
uniform float fresnel_intensity = 3.0;
uniform vec4 fresnel_color : hint_color = vec4(0.0, 0.7, 0.9, 1.0);

// https://godotshaders.com/snippet/fresnel/
vec3 fresnel_glow(float amount, float intensity, vec3 color, vec3 normal, vec3 view)
{
	return pow((1.0 - dot(normalize(normal), normalize(view))), amount) * color * intensity;
}

void fragment()
{
	vec3 base_color = (texture(texture_albedo, UV) * albedo).rgb;
	vec3 fresnel = fresnel_glow(fresnel_exponent, fresnel_intensity, fresnel_color.rgb, NORMAL, VIEW);
	ALBEDO = base_color + fresnel;
}
"
